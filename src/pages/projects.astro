---
import Layout from '../layouts/Layout.astro'
import Container from '../components/Container.astro'
import ProjectDetail from '../components/ProjectDetail.astro'
import ProjectFilter from '../components/ProjectFilter.astro'

const categories = ['All', 'AI/ML', 'Data Science', 'Web Development', 'Research']
const activeCategory = 'All'

// Định nghĩa dự án với category
const projects = [
  {
    title: "Classify Horses and Cows | EfficientNetB7 DL Network",
    date: "June 2024",
    description: "An image classification project using EfficientNetB7 deep learning network to accurately classify images of horses and cows.",
    technologies: ["Python", "TensorFlow", "EfficientNetB7", "Computer Vision", "Jupyter Notebook"],
    projectUrl: "https://drive.google.com/drive/folders/1X-xfm92FVwLajgr-c5sSBW8DFWmbUtNQ?usp=sharing",
    achievements: [
      "Built and deployed an EfficientNetB7 model to classify cattle and horses with ≃97% accuracy.",
      "Optimized data preprocessing, training, and evaluation for performance."
    ],
    imageUrl: "/horses-cows.jpg",
    category: "AI/ML"
  },
  {
    title: "Reinforcement Learning for Flappy Bird",
    date: "June 2024",
    description: "Implementation of reinforcement learning techniques to train an AI agent to play Flappy Bird game autonomously.",
    technologies: ["Python", "DQN", "Double DQN", "Reinforcement Learning", "OpenAI Gym", "Jupyter Notebook"],
    projectUrl: "https://drive.google.com/drive/folders/1BfzibofyYlzwfiRyRD4ZkAwOXECOwnkt?usp=drive_link",
    achievements: [
      "Implemented Q-Learning and Double Q-Learning to train an AI agent for Flappy Bird in OpenAI Gym.",
      "Designed reward structures, evaluated performance, and documented findings.",
      "Strengthened collaboration and technical communication skills."
    ],
    imageUrl: "/flappy-bird.jpg",
    category: "AI/ML"
  },
  {
    title: "Video Retrieval from Text | CLIP, FAISS",
    date: "November 2024",
    description: "A system that enables retrieving videos based on text descriptions using CLIP embeddings and FAISS for efficient similarity search.",
    technologies: ["Python", "CLIP", "FAISS", "Streamlit", "Deep Learning", "Natural Language Processing"],
    projectUrl: "https://drive.google.com/drive/folders/1ZyYjAKhvJfzq0GwFXTETDLycvO3wZtA1?usp=drive_link",
    achievements: [
      "Successfully implemented a video retrieval system using CLIP and FAISS, enabling efficient search and retrieval based on textual input.",
      "Optimized the embedding generation and indexing process for fast and accurate video retrieval.",
      "Enhanced user experience by integrating the system with a Python-based interface for seamless interaction."
    ],
    imageUrl: "/video-retrieval.jpg",
    category: "AI/ML"
  },
  {
    title: "Mental Health Chatbot | Transformers, Langchain",
    date: "November 2024",
    description: "A chatbot designed to provide mental health support using advanced NLP techniques and language models.",
    technologies: ["Python", "Transformers", "Langchain", "Streamlit", "NLP", "AI"],
    projectUrl: "https://drive.google.com/drive/folders/18JLhpH8sFnZmD6Yf06nxKCNGBZDKK8q5?usp=drive_link",
    achievements: [
      "Developed a mental health chatbot using Transformers and Langchain, enabling intelligent and empathetic conversations.",
      "Integrated advanced NLP capabilities for contextual understanding and sentiment analysis.",
      "Built a user-friendly interface with Streamlit for seamless interaction."
    ],
    imageUrl: "/chatbot.jpg",
    category: "AI/ML"
  },
  {
    title: "Research of CEM-RL | Reinforcement Learning",
    date: "November 2024",
    description: "Research on Cross-Entropy Method for Reinforcement Learning (CEM-RL), a hybrid approach combining evolutionary and gradient-based methods.",
    technologies: ["Python", "Reinforcement Learning", "CEM", "PyTorch", "Research"],
    projectUrl: "https://drive.google.com/drive/folders/1NvmmCrwwxHBtfZoX4UMCuiMQAw4KyEOZ?usp=drive_link",
    achievements: [
      "Developed and tested CEM-RL, a hybrid approach combining evolutionary and gradient-based methods for policy search, achieving faster convergence and improved robustness.",
      "Evaluated performance in simulated environments and documented insights for optimization strategies."
    ],
    imageUrl: "/cem-rl.jpg",
    category: "Research"
  },
  {
    title: "RecipeHub | React Web App, TheMealDB & CocktailDB APIs, Netlify",
    date: "April 2025",
    description: "Developed a responsive recipe browsing web application using React, styled-components, and TheMealDB + CocktailDB APIs",
    technologies: [" React Web App", "TheMealDB & CocktailDB APIs", "Netlify"],
    projectUrl: "https://recipeshubweb.netlify.app/",
    achievements: [
      "Implemented real-time search, category filters, and dynamic routing for detailed recipe views.",
      "Deployed on Netlify with optimized performance, ensuring smooth user experience across devices."
    ],
    imageUrl: "/recipe.jpg",
    category: "Web Development"
  },
  {
    title: "QuickResume | React Web App, JSON Resume, Netlify",
    date: "May 2025",
    description: "Designed and deployed a dynamic resume builder using React with JSON Resume schema integration for real-time content updates.",
    technologies: [" React Web App", "JSON Resume", "Netlify"],
    projectUrl: "https://quickresumeweb.netlify.app/",
    achievements: [
      "Enabled export to PDF and theme switching for personalized resume presentation.",
      "Implemented intuitive UI/UX for streamlined user experience, supporting mobile responsiveness."
    ],
    imageUrl: "/resume.jpg",
    category: "Web Development"
  },
  {
    title: "ChessGame | Next.js, TypeScript, chess.js, Tailwind CSS",
    date: "May 2025",
    description: "Developed an interactive chess game using Next.js and TypeScript, with real-time legal move validation via chess.js.",
    technologies: [" React Web App", "Chess.js", "Vercel"],
    projectUrl: "https://chessgame-chi.vercel.app/",
    achievements: [
      "Implemented a clean, responsive UI with Tailwind CSS, enabling intuitive gameplay across devices.",
      "Integrated full game logic: move history, player turns, check/checkmate detection."
    ],
    imageUrl: "/chess.jpg",
    category: "Web Development"
  },
  {
  title: "F1 Dashboard | Next.js, TypeScript, Ergast API, Vite, Tailwind CSS",
  date: "June 2025",
  description: "Built a dynamic Formula 1 dashboard that streams live driver & team data via the Ergast API, pairing it with historical statistics for deeper race insights.",
  technologies: ["Next.js", "TypeScript", "Tailwind CSS", "Shadcn/ui", "Ergast API", "Vercel"],
  projectUrl: "https://f1-dashboard-web.vercel.app/",
  achievements: [
    "Implemented real-time telemetry and standings with modular TypeScript data-fetching layers.",
    "Designed responsive dark/light UI using Tailwind CSS and Shadcn/ui for consistent cross-device experience.",
    "Laid foundation for advanced interactive graphs and full mobile responsiveness in upcoming releases."
  ],
  imageUrl: "/f1.jpg",
  category: "Web Development"
},
  {
    title: "Sonata | Next.js, TypeScript, PostreSQL, Recommendation Algorithm, Tailwind CSS",
    date: "June 2025",
    description: "Developed a classical music website.",
    technologies: [" React Web App", "Recommendation Algorithm", "Vercel"],
    projectUrl: "https://sonata.io.vn/",
    achievements: [
      "Implemented a clean, responsive UI with Tailwind CSS, enabling intuitive hearing music experience across devices.",
      "Integrated full music website logic."
    ],
    imageUrl: "/sonata.jpg",
    category: "Web Development"
  },
  {
  "title": "Infinite World | Three.js, WebGL, Procedural Generation",
  "date": "June 2025",
  "description": "Created a browser-based, infinitely autogenerated 3-D world rendered with WebGL and Three.js, allowing seamless first-person exploration.",
  "technologies": ["WebGL", "Three.js", "JavaScript", "Vite", "Vercel"],
  "projectUrl": "https://open-ochre-seven.vercel.app/",
  "achievements": [
    "Engineered chunk-streamed terrain with level-of-detail (LOD) to keep GPU/CPU usage low while the world grows without bounds.",
    "Implemented intuitive WASD navigation, pointer-lock camera, and quick-toggle features such as fullscreen (F) and debug view (B)."
  ],
  "imageUrl": "/open.jpg",
  "category": "Web Development"
},
{
  "title": "Traffic Coach | Next.js, TypeScript, Tailwind CSS",
  "date": "June 2025",
  "description": "Built a Vietnamese traffic-law lookup and comparison tool that lets users search violations and instantly view penalties under both Decree 100/2019 and the newer Decree 168/2024.",
  "technologies": ["Next.js", "TypeScript", "Tailwind CSS", "Vercel"],
  "projectUrl": "https://traffic-coach.vercel.app/",
  "achievements": [
    "Implemented fuzzy-search and vehicle-type filters for rapid retrieval of relevant violation rules and fines.",
    "Designed side-by-side comparison UI so users can clearly see differences in penalties between the two decrees."
  ],
  "imageUrl": "/traffic.jpg",
  "category": "Web Development"
},
{
   "title": "Scientific Paper Search Tool",
   "date": "July 2025",
   "description": "A free tool for searching scientific papers across multiple academic databases such as ArXiv, CrossRef, Semantic Scholar, OpenAlex, PubMed, and DOAJ.",
   "technologies": ["Web Application", "React", "Vercel", "API Integration"],
   "projectUrl": "https://papersearchtool.vercel.app/",
   "achievements": [
     "Integrated search from multiple major academic data sources.",
     "Provides advanced filters by publication year, author, and category.",
     "Allows users to export search results to CSV, JSON, or print directly.",
     "Includes a bookmarking feature to save papers for later reference."
   ],
   "imageUrl": "/papersearch.png",
   "category": "Web Development"
 },
 {
   "title": "GitDit - Git Repository Viewer",
   "date": "July 2025",
   "description": "A web-based tool to easily view and analyze Git repositories.",
   "technologies": ["React", "Vercel", "GitHub API", "JavaScript", "CSS"],
   "projectUrl": "https://gitdit.vercel.app/",
   "achievements": [
     "Watch the most starred repositories on GitHub, search for repositories by name, and view detailed information about each repository."
   ],
   "imageUrl": "/gitdit.png",
   "category": "Web Development"
 },
 {
   "title": "Color Visualizer",
   "date": "July 2025",
   "description": "An online tool that allows users to input hex, RGB, or RGBA color codes and instantly visualize the corresponding color. Useful for developers and designers to preview and choose colors for their projects.",
   "technologies": ["React", "Vercel", "JavaScript", "CSS"],
   "projectUrl": "https://color-ten-bice.vercel.app/",
   "achievements": [
     "Provides instant color visualization from various color code formats.",
     "Offers a simple and intuitive user interface for color selection.",
     "Helps streamline the workflow for web developers and UI/UX designers.",
     "Deployed as a fast and accessible web application on Vercel."
   ],
   "imageUrl": "/colorpalette.png",
   "category": "Web Development"
 }

]
---

<Layout
  title="Projects | Huynh Dang Khoa"
  description="AI, Machine Learning, Data Science and Software Engineering projects by Huynh Dang Khoa"
>
  <Container class="py-10 max-w-5xl">
    <div class="space-y-12">
      <div class="text-center mb-8">
        <h1 class="text-4xl font-bold mb-4">My Projects</h1>
        <p class="text-lg text-muted-foreground max-w-2xl mx-auto">
          A collection of my projects in AI, Machine Learning, Data Science, and Software Engineering.
          Each project demonstrates my skills, knowledge, and passion for technology.
        </p>
      </div>
      
      <ProjectFilter categories={categories} activeCategory={activeCategory} />
      
      <div class="space-y-8" id="projects-container">
        {projects.map(project => (
          <div id={project.category.toLowerCase().replace(/\s+/g, '-')} class="scroll-mt-24 project-item" data-category={project.category}>
            <ProjectDetail
              title={project.title}
              date={project.date}
              description={project.description}
              technologies={project.technologies}
              projectUrl={project.projectUrl}
              achievements={project.achievements}
              imageUrl={project.imageUrl}
            />
          </div>
        ))}
      </div>
    </div>
  </Container>
</Layout>

<script>
  function filterProjects(category: string) {
    const items = document.querySelectorAll('.project-item');
    items.forEach((item) => {
      if (item instanceof HTMLElement) {
        if (category === 'all') {
          item.style.display = 'block';
        } else {
          const tags = item.getAttribute('data-tags')?.split(',') || [];
          if (tags.includes(category)) {
            item.style.display = 'block';
          } else {
            item.style.display = 'none';
          }
        }
      }
    });
  }
</script> 
